/* ========== GLOBAL RESET ========== */
/* Base: quita márgenes y evita scroll horizontal por desbordes de layout. */
html,
body {
    background-color: transparent;
    margin: 0;
    padding: 0;
    overflow-x: hidden;
}

/* Fondo gradiente principal de la página (detrás de secciones). */
.content-wrapper {
    background: linear-gradient(to bottom right,
            #010d1f 0%, #031a3f 25%, #02375a 60%, #0e4c75 85%, #1d84d8 100%);
    position: relative;
    z-index: 1;
    padding-bottom: 4rem;
}

/* ========== NAVBAR SCROLL FIX ========== */
/* Navbar opaca al hacer scroll (se activa con .scrolled desde TS). */
.navbar.scrolled {
    background-color: rgba(15, 23, 42, .95);
    backdrop-filter: blur(10px);
    box-shadow: 0 2px 12px rgba(0, 0, 0, .3);
    transition: background-color .3s ease, box-shadow .3s ease;
}

/* ========== HERO SECTION ========== */
/* Contenedor del hero con vídeo de fondo en 16:9 por defecto (desktop). */
.hero-video {
    position: relative;
    width: 100%;
    aspect-ratio: 16/9;
    /* se ajusta en móviles más abajo */
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    background-color: transparent;
}

/* Overlay oscuro sobre el vídeo para mejorar contraste del texto. */
.hero-video::before {
    content: "";
    position: absolute;
    inset: 0;
    background: rgba(15, 23, 42, .5);
    z-index: 1;
}

/* Vídeo cubre todo el hero. Se escala/posiciona con object-fit/position. */
.bg-video {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    /* rellena sin distorsión, recortando si hace falta */
    object-fit: cover;
    object-position: center center;
    z-index: 0;
    /* color de fondo por si el vídeo tarda */
    background-color: #0f172a;
    transition: transform .3s ease, object-position .3s ease;
}

/* Contenedor del copy por encima del overlay/vídeo. */
.hero-text {
    position: relative;
    z-index: 2;
    padding: 0 20px;
    color: #fff;
}

/* Titular principal del hero (fluid con clamp). */
.hero-h1 {
    margin: 0 0 .4rem;
    font-size: clamp(2.2rem, 1.2rem + 3vw, 3.2rem);
    font-weight: 900;
}

/* ====== EFECTO “TIPEO” ====== */
/* Contenedor del texto + caret en una misma línea (grid en fila). */
.type-wrap {
    display: inline-grid;
    grid-auto-flow: column;
    align-items: baseline;
}

/* Texto que “se escribe”: se oculta con max-width 0ch hasta activar animación. */
.type-target {
    color: #3b82f6;
    white-space: nowrap;
    overflow: hidden;
    display: inline-block;
    /* nº de pasos (caracteres) del typing */
    --steps: 22;
    /* sin animación por defecto */
    max-width: 0ch;
}

/* La animación se activa añadiendo la clase .type-run desde TS */
.type-target.type-run {
    animation: typing 2.1s steps(var(--steps), end) .15s forwards;
}

/* Cursor “caret” (barra vertical que parpadea). */
.caret {
    width: 4px;
    /* visible */
    height: 1em;
    background: #3b82f6;
    margin-left: 4px;
    align-self: center;
    /* base sin blink */
    opacity: 0;
}

/* Blink del caret se activa con .caret-run desde TS */
.caret.caret-run {
    animation: blink .8s step-end infinite;
}

/* Anima max-width en ch para descubrir el texto “escrito”. */
@keyframes typing {
    from {
        max-width: 0ch;
    }

    to {
        max-width: 26ch;
    }
}

/* Parpadeo del caret. */
@keyframes blink {

    0%,
    100% {
        opacity: 0;
    }

    50% {
        opacity: 1;
    }
}

/* Subtítulo y lead del hero (con sombra sutil para legibilidad). */
.hero-h2 {
    margin: .1rem 0 .7rem;
    font-size: clamp(1.2rem, .9rem + 1.4vw, 1.9rem);
    font-weight: 800;
    color: #d7e4ff;
    text-shadow: 0 1px 10px rgba(0, 0, 0, .45);
}

.hero-lead {
    margin: 0 auto 1.1rem;
    max-width: 70ch;
    color: #eaf2ff;
    opacity: .96;
    text-shadow: 0 1px 8px rgba(0, 0, 0, .35);
}

/*  Triángulo invertido de CTAs: 3 botones en layout “top / left / right”. */
.cta-tri {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-areas:
        "top top"
        "left right";
    gap: clamp(8px, 2vw, 12px);
    margin-top: clamp(10px, 2.6vh, 20px);
    justify-items: center;
}

.area-top {
    grid-area: top;
}

.area-left {
    grid-area: left;
    justify-self: end;
}

.area-right {
    grid-area: right;
    justify-self: start;
}

/* ========== BOTONES (borde azul + relleno animado + glow) ========== */
.btn {
    --btn-blue: #3b82f6;

    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 4px;

    min-width: 150px;
    max-width: 200px;
    padding: 12px 18px;
    border-radius: 12px;

    background: transparent;
    border: 2px solid var(--btn-blue);
    /* fuerza blanco para texto/íconos */
    color: #fff !important;
    text-decoration: none;
    font-weight: 600;
    letter-spacing: .2px;
    /* para el relleno animado */
    overflow: hidden;
    transition: transform .18s ease, box-shadow .25s ease, border-color .25s ease, color .25s ease;
}

/* “Relleno” que se expande en hover (barre de izquierda a derecha). */
.btn::before {
    content: "";
    position: absolute;
    inset: 0;
    background: var(--btn-blue);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform .35s ease;
    z-index: 0;
}

/* Asegura que el contenido del botón quede por encima del relleno. */
.btn>* {
    position: relative;
    z-index: 1;
}

.btn:hover::before {
    transform: scaleX(1);
}

.btn:hover {
    transform: translateY(-2px);
    border-color: #60a5fa;
    box-shadow: 0 0 18px rgba(59, 130, 246, .65), 0 0 28px rgba(96, 165, 250, .45);
}

/* Iconos SVG dentro del botón: heredan color (currentColor). */
.btn svg {
    width: 18px;
    height: 18px;
    fill: currentColor;
    display: block;
}

/* Responsive triángulo -> columna (los 3 CTAs apilados). */
@media (max-width: 640px) {
    .cta-tri {
        grid-template-areas:
            "top top"
            "left left"
            "right right";
    }

    .area-left,
    .area-right {
        justify-self: center;
    }

    .btn {
        min-width: 230px;
    }
}

/* ====== RESPONSIVE HERO VIDEO ====== */
/* En móviles: el hero deja el aspect-ratio fijo y ocupa la altura de la viewport. */
@media (max-width: 768px) {
    .hero-video {
        aspect-ratio: auto;
        /* viewport “small” height: estable con UI móvil */
        min-height: 100svh;
    }

    .hero-text {
        padding: 0 20px;
    }

    .bg-video {
        /* prioriza la parte superior del vídeo */
        object-position: center top;
        transform: scale(1.05);
        transform-origin: center top;
    }
}

/* Ajustes adicionales para pantallas muy pequeñas: aumenta el “zoom” del vídeo. */
@media (max-width: 480px) {
    .bg-video {
        transform: scale(1.15);
    }

    .hero-h1 {
        font-size: 1.6rem;
    }

    .hero-h2 {
        font-size: 1rem;
    }
}

@media (max-width: 360px) {
    .bg-video {
        transform: scale(1.25);
        object-position: center top;
    }

    .hero-h1 {
        font-size: 1.4rem;
    }

    .hero-h2 {
        font-size: .9rem;
    }
}

/* Altas pantallas muy verticales: prioriza ver el vídeo completo sin recortes. */
@media screen and (max-aspect-ratio: 9/16) {
    .bg-video {
        /* evita recortes, pueden quedar “barras” laterales */
        object-fit: contain !important;
        transform: none !important;
        object-position: top center !important;
        /* color para las “barras” */
        background-color: #0f172a;
    }
}

/* ========== SCROLL ICON ========== */
/* Indicador de desplazamiento con animación combinada (rebote + aparición). */
.scroll-down {
    position: absolute;
    bottom: 30px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 2rem;
    color: white;
    animation: bounce 2s infinite, fadeIn 1s ease-in-out 1.5s forwards;
    /* queda oculto hasta completar fadeIn */
    opacity: 0;
    z-index: 1;
}

/* Rebote vertical del indicador. */
@keyframes bounce {

    0%,
    100% {
        transform: translate(-50%, 0);
    }

    50% {
        transform: translate(-50%, 8px);
    }
}

/* Aparición diferida del indicador (sin parpadeo inicial). */
@keyframes fadeIn {
    to {
        opacity: 1;
    }
}

/* ========== SECTIONS ========== */
/* Padding y ancho máximo consistente en secciones bajo el hero. */
section:not(.hero-video) {
    padding: 80px 20px;
    max-width: 1100px;
    margin: auto;
    text-align: center;
}

/* Grid de “proyectos destacados” (si se usa en otra sección). */
.featured-projects .projects-grid {
    display: grid;
    gap: 30px;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    margin-top: 40px;
}

.project-card {
    background: #1e293b;
    border-radius: 12px;
    padding: 20px;
    text-align: center;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.project-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.25);
}

.project-card img {
    width: 100%;
    border-radius: 8px;
    margin-bottom: 1rem;
}

/* ========== RESPONSIVE ========== */
/* Ajustes fluidos de tipografía del hero con breakpoints genéricos. */
@media (max-width: 1024px) {
    .hero-text h1 {
        font-size: 2.5rem;
    }

    .hero-text h2 {
        font-size: 1.5rem;
    }
}

@media (max-width: 768px) {
    .hero-video {
        aspect-ratio: auto;
        min-height: 100svh;
    }

    .hero-text {
        padding: 0 20px;
    }

    .hero-text h1 {
        font-size: 2rem;
    }

    .hero-text h2 {
        font-size: 1.2rem;
    }

    .bg-video {
        object-position: center top;
        transform: scale(1.05);
        transform-origin: center top;
    }
}

@media (max-width: 480px) {
    .bg-video {
        transform: scale(1.15);
    }

    .hero-text h1 {
        font-size: 1.6rem;
    }

    .hero-text h2 {
        font-size: 1rem;
    }
}

@media (max-width: 360px) {
    .bg-video {
        transform: scale(1.25);
        object-position: center top;
    }

    .hero-text h1 {
        font-size: 1.4rem;
    }

    .hero-text h2 {
        font-size: 0.9rem;
    }

    .btn {
        width: 100%;
        max-width: 220px;
    }
}

/* Extra small devices (XS): hasta 320px */
@media (max-width: 320px) {
    .bg-video {
        transform: scale(1.3);
        object-position: center top;
    }

    .hero-text h1 {
        font-size: 1.2rem;
    }

    .hero-text h2 {
        font-size: 0.85rem;
    }

    .cta-buttons {
        gap: 8px;
    }

    .btn,
    .btn-outline {
        font-size: 0.9rem;
        max-width: 200px;
    }
}

/* Ultra-narrow: hasta 280px */
@media (max-width: 280px) {
    .bg-video {
        transform: scale(1.35);
    }

    .hero-text h1 {
        font-size: 1.1rem;
    }

    .hero-text h2 {
        font-size: 0.75rem;
    }

    .hero-text p {
        font-size: 0.75rem;
    }

    .cta-buttons {
        gap: 6px;
    }

    .btn,
    .btn-outline {
        font-size: 0.85rem;
        max-width: 180px;
    }
}

/* Modo extremo/debug o pruebas (240px o menos) */
@media (max-width: 240px) {
    .bg-video {
        transform: scale(1.45);
        object-position: center top;
    }

    .hero-text h1 {
        font-size: 1rem;
    }

    .hero-text h2,
    .hero-text p {
        font-size: 0.7rem;
    }

    .cta-buttons {
        gap: 4px;
    }

    .btn,
    .btn-outline {
        font-size: 0.8rem;
        max-width: 160px;
    }
}

/* Ajuste para móviles con pantalla muy vertical (Galaxy S20, Pixel, etc.) */
@media screen and (max-aspect-ratio: 9/16) {
    .bg-video {
        object-fit: contain !important;
        transform: none !important;
        object-position: top center !important;
        background-color: #0f172a;
    }
}